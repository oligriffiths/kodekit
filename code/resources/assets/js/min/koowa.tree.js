var globalCacheForjQueryReplacement=window.jQuery;window.jQuery=window.kQuery,/**
 * Koowa jqTree wrapper
 *
 * Customized instance of jqTree to render a list of categories in a tree structure.
 * It deals with turning a flat list into a hierarchy structure that jqTree understands.
 *
 * @copyright	Copyright (C) 2007 - 2014 Johan Janssens and Timble CVBA. (http://www.timble.net)
 * @license		GNU GPLv3 <http://www.gnu.org/licenses/gpl.html>
 * @link		https://github.com/nooku/nooku-framework for the canonical source repository
 * @requires    Koowa.Class, jqTree plugin
 */
function(a){Koowa.Tree=Koowa.Class.extend({initialize:function(b,c){this.setOptions(c),this.element=a(b),this.options.onBeforeInitialize&&this.options.onBeforeInitialize.call(this),a(window).load(a.proxy(function(){"relative"!=this.element.css("position")&&this.element.css("position","relative")},this)),this.attachHandlers(),this.options.data&&this.options.data.length&&(this.options.data=this.parseData(this.options.data)),this.tree=a.proxy(this.element.tree,this.element),this.tree(this.options),this.options.onAfterInitialize&&this.options.onAfterInitialize.call(this)},getDefaults:function(){var b=this,c={selected:null,data:[],autoOpen:0,useContextMenu:!1,toggler:[{triangle:["icon-triangle-right","&#x25ba;"],folder:"koowa_icon--folder"},{triangle:["icon-triangle-down","&#x25bc;"],folder:"koowa_icon--folder_open"}],onCreateLi:function(c,d){if(d.find(".jqtree-element").attr("title",c.name).wrap(a("<a />",{href:"javascript:void(0)",on:{click:function(a){a.preventDefault(),a.stopPropagation(),b.tree("selectNode",c)}}})),c.isFolder()){var e=b.options.toggler,f=e[c.is_open?1:0],g="folder"+(c.is_open?"":" open"),h=a("<i />",{"class":"icon-toggler "+f.triangle[0],html:f.triangle[1],on:{click:function(a){a.preventDefault(),a.stopPropagation(),b.element.tree("toggle",c)}}});d.find(".jqtree-title").prepend('<span class="'+f.folder+'"><i>'+g+"</i></span> ").prepend(h)}else d.find(".jqtree-title").prepend('<span class="'+b.options.toggler[0].folder+'"><i>folder</i></span> ').prepend('<i class="icon-triangle-hide"></i>');for(var i=c.getLevel(),j=1;i>j;++j)d.find(".jqtree-title").prepend('<i class="icon-whitespace"></i> ')}};return c},setOptions:function(b){return this.options=a.extend(!0,{},this.getDefaults(),b),this},selectNode:function(a,b){var c=[-1],d=b.tree("getState");c.push.apply(c,a.path.split("/").map(function(a){return parseInt(a,10)})),d.selected_node=a.id,d.open_nodes.push.apply(d.open_nodes,c),b.tree("setState",d)},parseData:function(a){return this._parseData(a)},_parseData:function(b){var c=[],d={};return a.each(b,function(a,b){d[b.id]=b,0!=b.parent&&d.hasOwnProperty(b.parent)?(d[b.parent].hasOwnProperty("children")||(d[b.parent].children=[]),d[b.parent].children.push(b)):c.push(b)}),c},unserialize:function(a){var b,c={};a=a.replace(/^\?/,"").split(/&/);for(b in a)a.hasOwnProperty(b)&&(b=a[b].split("="),c[decodeURIComponent(b[0])]=decodeURIComponent(b[1]));return c},_attachHandlers:function(){var b=this.options,c=this,d=b.toggler;this.element.bind({"tree.select":function(b){a(this).find(".active").removeClass("active"),b.node&&a(this).find(".jqtree-selected").addClass("active")},"tree.open":function(b){var c=b.node,e=d[1],f=d[0],g=a(c.element).children("a").find(".icon-toggler");g.removeClass(f.triangle[0]).addClass(e.triangle[0]).html(e.triangle[1]),g.closest("a").find("."+f.folder).removeClass(f.folder).addClass(e.folder)},"tree.close":function(b){var c=b.node,e=d[0],f=d[1],g=a(c.element).children("a").find(".icon-toggler");g.removeClass(f.triangle[0]).addClass(e.triangle[0]).html(e.triangle[1]),g.closest("a").find("."+f.folder).removeClass(f.folder).addClass(e.folder)},"tree.init":function(){if(a(this).find("ul.jqtree-tree").addClass("sidebar-nav"),b.selected){var d=a(this).tree("getNodeById",b.selected);a(this).tree("selectNode",d),c.selectNode(d,a(this))}},"tree.refresh":function(){a(this).find("ul.jqtree-tree").addClass("sidebar-nav"),a(this).find(".jqtree-selected").addClass("active")}})},attachHandlers:function(){this._attachHandlers()},scrollIntoView:function(b,c,d){var e=a(b.element),f=c.height(),g=c.width(),h=e[0].offsetTop,i=e.height(),j=e.width(),k=Math.min(h,h-f+i),l={};if(k>c.scrollTop()?l.scrollTop=k:h<c.scrollTop()&&(l.scrollTop=h),j>g){var m=e.find(".jqtree-title").filter(":first"),n=m.find(".icon-whitespace").last(),o=n.length?n[0].offsetLeft:0;l.scrollLeft=o}(l.scrollTop||l.scrollLeft)&&(clearTimeout(this._scroll_into_view),this._scroll_into_view=setTimeout(function(){c.animate(l,d||900)}.bind(this),d||900))}})}(window.kQuery),window.jQuery=globalCacheForjQueryReplacement,globalCacheForjQueryReplacement=void 0;
//# sourceMappingURL=koowa.tree.js.map