/**
 * CSS only animated radio toggle styling
 * ======================================
 */


/**
 * Cutting the mustard
 * -------------------
 * The :not(old-ie) makes sure nothing gets added to older IE
 */

@if $radio-toggle == true {
  .booleanlist:not(ie) {
    display: table;
    width: 100%;
    position: relative;
    background: $input-bg;
    border: 1px solid $input-border;
    border-radius: $input-border-radius;
    color: $input-color;
    padding: 1px;
    height: $input-height-base;

    .booleanlist__item {
      display: table-cell;
      width: 50%;
      text-align: center;
      margin: 0;
      padding: 0;

      &:last-child:not(:nth-child(2)) input ~ label {
        z-index: 0;
      }
    }

    &.booleanlist--inline,
    &.booleanlist--multiple {
      .booleanlist__item {
        width: auto;
      }
    }

    &.booleanlist--inline {
      width: auto;
    }

    input {
      width: 1px;
      height: 1px;
      position: absolute;
      margin: -1px;
      overflow: hidden;
      clip: rect(0 0 0 0);
    }

    label, span {
      display: block;
      cursor: pointer;
      margin: 0;
      border-radius: $input-border-radius - 1; // Better looking radius for children
      height: $input-height-base - 4; // Minus 4 to adjust for borders and padding
    }

    label:before {
      display: block;
      content: " ";
      position: absolute;
      top: 0;
      right: 0;
      bottom: 0;
      left: 0;
      pointer-events: none;
      z-index: 1;
      background: transparent;
    }

    span {
      line-height: $input-height-base - 4;
      font-weight: $regular;
      position: relative;
      z-index: 2;
      transition: all $transition;

      &:before {
        border-radius: $input-border-radius - 1; // Better looking radius for children
      }

      &:hover {
        background: #eee;
      }
    }

    .booleanlist__item {
      span:before {
        display: block;
        content: " ";
        position: absolute;
        top: 0;
        right: 0;
        bottom: 0;
        left: 0;
        background: transparent;
        pointer-events: none;
        z-index: -1;
        transition: all $transition;
      }

      &:first-child,
      &:last-child {
        span:before {
          width: 100%;
          right: auto;
          left: auto;
        }
      }
    }

    &.booleanlist--inline,
    &.booleanlist--multiple {
      .booleanlist__item {
        &:first-child,
        &:last-child {
          span:before {
            width: 50%;
          }
        }
      }
    }

    .booleanlist__item:first-child {
      span {
        &:before {
          left: 100%;
        }
      }
    }

    .booleanlist__item:last-child {
      span {
        &:before {
          left: -100%;
        }
      }
    }

    .booleanlist__item:nth-child(n) {
      input:checked + label {
        z-index: 3;

        span:before {
          left: 0;
          width: 100%;
        }
      }
    }

    input:active + label,
    input:focus + label {
      &:before {
        margin: -1px;
        border-radius: 4px;
        border: 1px solid #66afe9;
        box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075), 0 0 8px rgba(102, 175, 233, 0.6);
      }
    }

    // Checked classes
    .booleanlist__item {
      input:checked + label span {
        color: white;
      }
    }

    // false color
    [value="0"] {
      &:checked + label span:before {
        background: $radio-toggle-0;
      }
    }

    // true color
    [value="1"] {
      &:checked + label span:before {
        background: $radio-toggle-1;
      }
    }

    // neutral color
    :checked + label span:before,
    &.booleanlist--neutral input[value]:checked + label span:before {
      background: $radio-toggle-neutral;
    }
  }
}