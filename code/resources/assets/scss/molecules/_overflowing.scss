/* ==========================================================================
   Overflowing
   ========================================================================== */

/**
 * Add overflowing shadow boxes to either top, right, bottom or left side of
 * an element. This shows the user that there's more content to see when no
 * scrollbars are visible.
 *
 * To properly use this you need to wrap the overflowing container inside
 * another container named `overflowing`. JS will take care of this if you don't.
 *
 * 1. This wrapping container needs to have overflow: hidden set
 * 2. It also needs have a relative position for positioning the shadows
 * 3. And adding overflow-scrolling: touch for smooth scroll on iOs
 * 4. Add display: flex so child (actual overflowing container) can flex
 */

// Shadow boxes on overflowing containers
.overflowing {
  overflow: hidden; /* 1 */
  position: relative; /* 2 */
  -webkit-overflow-scrolling: touch; /* 3 */
  width: 100%;
  display: flex; /* 4 */


  /**
   * When flexbox is in use
   *
   * 1. When the child has flexbox, the parent needs it as well
   * 2. Don't grow item by default, only shrink if it doesn't fit
   */

  @include flexbox {
    &--flex {
      display: flex; /* 1 */
      flex: 0 1 auto;
    }
  }


  /* Set default settings for all shadow boxes */

  &--top,
  &--right,
  &--bottom,
  &--left {
    position: absolute; /* 2 */
    z-index: 99;
    background: $overflow-color;
    transition: all .5s $transition-easing;
    margin: 0;

    &.js-is-hidden {
      opacity: 0;
    }
  }

  &--top,
  &--bottom {
    height: 1px;
    left: 0;
    right: 0;
  }

  &--right,
  &--left {
    width: 1px;
    top: 0;
    bottom: 0;
  }

  &--top {
    top: 0;
    box-shadow: 0 (-($overflow-size/2)) $overflow-size $overflow-size $overflow-color;

    &.js-is-hidden {
      margin-top: -$overflow-size;
    }
  }

  &--right {
    right: 0;
    box-shadow: ($overflow-size/2) 0 $overflow-size $overflow-size $overflow-color;

    &.js-is-hidden {
      margin-right: -$overflow-size;
    }
  }

  &--bottom {
    bottom: 0;
    box-shadow: 0 ($overflow-size/2) $overflow-size $overflow-size $overflow-color;

    &.js-is-hidden {
      margin-bottom: -$overflow-size;
    }
  }

  &--left {
    left: 0;
    box-shadow: (-($overflow-size/2)) 0 $overflow-size $overflow-size $overflow-color;

    &.js-is-hidden {
      margin-left: -$overflow-size;
    }
  }
}
