/* ==========================================================================
   CSS only animated checkbox toggle styling
   ========================================================================== */

/** Default checkbox toggle
    =========================================================================

<div class="k-checkbox-toggle">
  <input type="checkbox" name="group1" id="group1a" value="1">
  <label for="group1a">
    <span data-true="✓" data-false="✖">Do something?</span>
  </label>
</div>
*/

/** Neutral checkbox toggle
    =========================================================================

<div class="k-checkbox-toggle k-checkbox-toggle--neutral">
  <input type="checkbox" name="group1" id="group1a" value="1">
  <label for="group1a">
    <span data-true="✓" data-false="✖">Do something?</span>
  </label>
</div>
*/


/**
 * Cutting the mustard
 *
 * 1. The :not(old-ie) makes sure nothing gets added to older/incapable IE
 *    Instead, normal checkboxes will be presented
 */

@if $checkbox-toggle == true {
  .k-checkbox-toggle:not(old-ie) { /* 1 */
    position: relative;
    display: block;
    margin-bottom: $spacing-small;

    &:last-child {
      margin-bottom: 0;
    }


    /* Hiding the input but keeping accessible */

    input {
      @extend .visually-hidden;
    }


    /* Basic label styling */

    label {
      line-height: $checkbox-toggle-size;
      font-weight: $regular
    }


    /* Making label, span and their psuedo elements fully clickable */

    label,
    span {
      position: relative;
      display: block;
      margin: 0;
      cursor: pointer;

      &:before,
      &:after {
        position: absolute;
        display: block;
      }
    }


    /* Toggle area outer element */

    label:before {
      top: 0;
      right: 0;
      width: $checkbox-toggle-size * 2;
      height: $checkbox-toggle-size;
      border: $checkbox-toggle-border-width solid #ccc;
      border-radius: $checkbox-toggle-border-radius;
      content: " ";
      background: white;
      transition: all $transition;
    }


    /* Toggle area inner element */

    label:after {
      top: $checkbox-toggle-border-width + $checkbox-toggle-padding;
      right: $checkbox-toggle-border-width + $checkbox-toggle-padding;
      width: $checkbox-toggle-width-inner;
      height: $checkbox-toggle-height-inner;
      border-radius: $checkbox-toggle-border-radius - $checkbox-toggle-padding;
      content: " ";
      background: $checkbox-toggle-0;
      transition: all $transition;
    }


    /* The fake toggle handlers */

    span {
      position: relative;
      z-index: 1;
      overflow: hidden;
    }

    span:before,
    span:after {
      -webkit-font-smoothing: antialiased;
      font-size: .8125em;
      line-height: $checkbox-toggle-height-inner - 2;
      text-transform: uppercase;
      text-align: center;
      transition: all $transition;
    }


    /**
     * The right fake toggle handler
     *
     * This is only the "data-false" content
     * The actual handler is the :after element
     */

    span:before {
      top: $checkbox-toggle-border-width + $checkbox-toggle-padding;
      right: $checkbox-toggle-border-width + $checkbox-toggle-padding;
      width: $checkbox-toggle-width-inner - $checkbox-toggle-height-inner;
      height: $checkbox-toggle-height-inner;
      border: 1px solid transparent;
      content: attr(data-false);
      color: white;
    }


    /**
     * The left fake toggle handler
     *
     * This :after element actually holds the fake handler
     * 1. The "data-true" content is shown here as well by using a negative text-indent
     * 2. Text color set to 0 by default so it won't show outside the toggle area
     */

    span:after {
      top: $checkbox-toggle-border-width + $checkbox-toggle-padding;
      right: ($checkbox-toggle-size * 2) - $checkbox-toggle-height-inner - ($checkbox-toggle-border-width + $checkbox-toggle-padding);
      width: $checkbox-toggle-height-inner;
      height: $checkbox-toggle-height-inner;
      border: 1px solid $checkbox-toggle-0;
      border-radius: $checkbox-toggle-border-radius - $checkbox-toggle-padding;
      background: white;
      content: attr(data-true); /* 1 */
      text-indent: -($checkbox-toggle-width-inner); /* 1 */
      text-align: center;
      transition: all $transition;
      color: rgba(white, 0); /* 2 */
    }


    /* Toggle area styling on focus / active */

    input:active,
    input:focus {
      & + label:before {
        border: $checkbox-toggle-border-width solid #66afe9;
        box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075), 0 0 8px rgba(102, 175, 233, 0.6);
      }
    }


    /** When the checkbox is in checked state
    ========================================================================= */

    input:checked + label {

      /* Green background */

      &:after {
        background: $checkbox-toggle-1;
      }


      /* Switching the fake toggle handler */

      span {

        /* Move handler negative content to the right and set color to opacity 0 */

        &:before {
          right: -($checkbox-toggle-width-inner - $checkbox-toggle-height-inner);
          color: rgba(white, 0);
        }


        /* Move toggle handler to the right and show the positive handler content */

        &:after {
          right: $checkbox-toggle-border-width + $checkbox-toggle-padding;
          border-color: $checkbox-toggle-1;
          color: white;
        }
      }
    }


    /** Neutral toggle boxes
    ========================================================================= */

    &.k-checkbox-toggle--neutral {

      /* Grey background */

      label {
        &:after {
          background: $checkbox-toggle-neutral-0;
        }
      }


      /* Grey border */

      span {
        &:after {
          border-color: darkest($checkbox-toggle-neutral-0);
        }
      }


      /* Blue background */

      input:checked + label {
        &:after {
          background: $checkbox-toggle-neutral-1;
        }

        span {
          &:after {
            border-color: $checkbox-toggle-neutral-1;
          }
        }
      }
    }
  }
}
